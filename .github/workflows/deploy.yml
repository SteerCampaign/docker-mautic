name: Building and pushing a docker image to Amazon ECR
on: [push, pull_request]

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: example-container:${{ github.sha }}
  
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
#    - name: Setup ECR
#      run: |
#        $( aws ecr get-login --no-include-email )
#    - name: Build and tag the image 
#      run: |
#        cd apache; docker build \
#          -t $CONTAINER_IMAGE \
#          -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE ./app

#    - name: Push
#      if: github.ref == 'refs/heads/master'
#      run: |
#        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
        
    
    - name: Create MySQL Volume
      run: docker volume create mysql_data
    - name: Build the Docker image for MySQL
      run: docker run --name percona -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mypassword -v mysql_data:/var/lib/mysql percona/percona-server:5.7 --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    - name: Create Mautic Volume
      run: docker volume create mautic_data
    - name: Build the Apache Docker image
      run: cd apache; docker build -t mautic-docker .
    - name: Setup ECR
      run: |
        $( aws ecr get-login --no-include-email )
    - name: Tagging docker image
      run: cd apache; docker tag mautic-docker:${{ github.sha }} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
    - name: Push to ECR
      if: github.ref == 'refs/heads/master'
      run: cd apache; docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
      
      